Задание 5

************************
Abstract Factory (Абстрактная фабрика) — порождающий паттерн.

Известен также под именем Kit (Инструментарий).

Частота использования: высокая.

Назначение: предоставляет интерфейс для создания семейств взаимосвязанных или взаимозависимых объектов, не специфицируя конкретные классы этих объектов. Методы абстрактной фабрики обычно реализуются как фабричные методы 



Участники:

• AbstractFactory (Абстрактная фабрика) — объявляет интерфейс для операций, создающих абстрактные объекты-продукты;

• ConcreteFactory (Конкретная фабрика) — реализует операции, создающие конкретные объекты-продукты;

• AbstractProduct (Абстрактный продукт) — объявляет интерфейс для типа объекта-продукта;

• ConcreteProduct (Конкретный продукт) — определяет объект-продукт, создаваемый соответствующей конкретной фабрикой; реализует интерфейс AbstractProduct;

• Client (Клиент)  — пользуется исключительно интерфейсами, которые объявлены в классах AbstractFactory и AbstractProduct.

ИСпользуя Windows Forms Application hеализовать иерархию классов, определяющих два вида элементов управления (controls): кнопки (buttons) и метки (labels). Абстрактные классы AbstractButton и AbstractLabel содержат метод GetControl, возвращающий строковое представление соответствующего элемента управления. Конкретные классы Button1, Button2, Label1, Label2 включают конструктор со строковым параметром text, который определяет текст, отображаемый на элементе управления (текст хранится в поле text). Конкретные классы отличаются видом строкового представления. Для Button1 и Label1 (первый вариант представления) текст отображается заглавными буквами, кнопки обрамляются квадратными скобками (например, [CAPTION]), метки обрамляются символами «=» (например, =MESSAGE=). Для Button2 и Label2 (второй вариант представления) текст отображается строчными буквами, кнопки обрамляются угловыми скобками (например, <caption>), метки обрамляются двойными кавычками (например, "message").

Реализовать иерархию классов ControlFactory (абстрактная фабрика), Factory1 и Factory2 (конкретные фабрики). Каждый класс содержит два метода: CreateButton(text) и CreateLabel(text). Для ControlFactory эти методы являются абстрактными, для конкретных фабрик они возвращают кнопку и метку соответствующего вида (первого или второго).

Также реализовать класс Client, предназначенный для формирования набора элементов управления. Конструктор данного класса принимает параметр f типа ControlFactory, который в дальнейшем используется для генерации элементов управления требуемого типа. 

Тестирование разработанной системы классов. Дано целое число N (≤ 6) и набор из N строк. Каждая строка начинается либо с символа «B» (признак кнопки), либо с символа «L» (признак метки). Затем идет пробел и текст соответствующего элемента управления. Используя два экземпляра класса Client, сформировать и вывести два варианта  представления указанного набора элементов управления. 
