Bridge (Мост) — структурный паттерн.
Известен также под именем Handle/Body (Описатель/Тело).
Частота использования: средняя.
Назначение: отделяет абстракцию от ее реализации так, чтобы то и другое можно было изменять независимо.
Участники:
• Abstraction (Абстракция) — определяет интерфейс абстракции; хранит ссылку на объект типа Implementor;
• RefinedAbstraction (Уточненная абстракция) — расширяет интерфейс, определенный абстракцией Abstraction;
• Implementor (Реализатор) — определяет интерфейс для классов реализации; не обязан точно соответствовать интерфейсу класса Abstraction (обычно предоставляет только примитивные операции, в то время как класс Abstraction определяет операции более высокого уровня, базирующиеся на этих примитивах);
• ConcreteImplementorA и ConcreteImplementorB (Конкретные реализаторы) — содержат конкретную реализацию интерфейса класса Implementor.


Задание 1. Реализовать иерархию классов-реализаторов, содержащую абстрактного реализатора Implementor и два конкретных реализатора ConcreteImplementorA и ConcreteImplementorB. Классы отвечают за представление горизонтальных линий и текста и включают методы DrawLine(size) и DrawText(text) (аналоги метода OperationImp на диаграмме классов), которые возвращают строковые значения. Параметр size определяет размер линии (в символах), параметр text — выводимый текст. В классе Implementor методы DrawLine и DrawText являются абстрактными. Конкретный реализатор A представляет линию в виде набора символов «−», а текст отображает в нижнем регистре. Конкретный реализатор B представляет линию в виде набора символов «=», а текст отображает в верхнем регистре. Оба конкретных реализатора имеют конструкторы без параметров, не выполняющие дополнительных действий.
Реализовать класс Abstraction, предназначенный для отображения и корректировки строки заголовка. Конструктор класса принимает параметры imp типа Implementor (ссылку на используемый реализатор) и size целого типа (размер заголовка).

Класс также содержит метод Show без параметров (аналог метода Operation на диаграмме классов), возвращающий строку-заголовок, и метод SetSize(n), задающий размер заголовка равным значению n (целое неотрицательное число). Класс Abstraction реализует простейший вариант заголовка, представляющий собой линию указанного размера.

Реализовать класс RefinedAbstraction, который является усовершенствованным вариантом класса Abstraction и позволяет включать в заголовок текст. Конструктор класса RefinedAbstraction содержит, кроме параметров imp и size, имеющих тот же смысл, что и для конструктора класса Abstraction, строковый параметр caption. Заголовок формируется следующим образом: вначале указывается линия размера 1, затем строка caption, затем линия такого размера, чтобы суммарный размер заголовка был равен size. Для малых значений size строка caption может урезаться справа. Переопределить нужным образом метод Show в классе RefinedAbstraction.


Тестирование разработанной системы классов. Дано целое положительное число size (начальный размер заголовка) и строка caption (необязательный элемент заголовка). Также даны пять целых положительных чисел (новые размеры заголовков). 

Создать экземпляры классов Abstraction и RefinedAbstraction с указанными параметрами и каждым из конкретных реализаторов A и B и вывести соответствующие заголовки методом Show. Затем, используя каждый из новых размеров, изменить размер каждого заголовка и вывести измененные заголовки. Порядок вывода заголовков для каждого размера: Abstraction с реализатором A, Abstraction с реализатором B, RefinedAbstraction с реализатором A, RefinedAbstraction с реализатором B. Для хранения созданных объектов использовать массив из четырех ссылочных элементов типа Abstraction.


